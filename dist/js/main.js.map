{"version":3,"sources":["circles.js","contact.js","main.js","navigator.js","projects.js"],"names":["drawCanvasCircles","_circles","forEach","circle","ctx","getContext","size","parseInt","window","getComputedStyle","width","value","dataset","pixelRatio","devicePixelRatio","scale","height","lineWidth","CIRCLE_STROKE_WIDTH","beginPath","strokeStyle","CIRCLE_BACKGROUND_STROKE","arc","Math","PI","stroke","CIRCLE_FOREGROUND_STROKE","onWindowResize","Array","from","document","querySelectorAll","addEventListener","INPUT_FILLED_CLASS","input","classList","add","el","remove","win","COOKIE_ACCEPT_NAME","INVERT_ME_CLASS","elCookieHint","querySelector","elMap","elsSensible","initMap","markerPosition","lat","lng","mapPosition","map","google","maps","Map","center","zoom","clickableIcons","disableDefaultUI","keyboardShortcuts","zoomControl","scrollwheel","styles","stylers","hue","saturation","gamma","Marker","position","console","info","localStorage","getItem","style","display","e","setItem","i","length","init","closeMenu","_master","active","ALLOWED_PAGES","NONE","openMenu","TEASER","closeResume","openResume","RESUME","_menuSwitches","_pageAnchors","_projectSwitches","_resumeSwitches","body","menuSwitch","preventDefault","resumeSwitch","pageAnchor","projectSwitch","observerCallback","entry","Error","projectsVisible","isIntersecting","setActiveProject","index","arguments","undefined","activeProjectIndex","requestAnimationFrame","_projectPreviewContainer","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","_projectPreviews","Symbol","iterator","next","done","PROJECT_ACTIVE_CLASS","err","return","transform","_projectProgress","nextProject","containerInteractionStart","x","y","firstInteractionPosition","clearInterval","projectCarousel","unsetActiveTimeout","setTimeout","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","preventNextClick","UNSET_ACTIVE_TIME","containerInteractionMove","xDist","projectWidth","totalOffset","lastInteractionPosition","containerInteractionEnd","percentOffset","MIN_DRAG_DISTANCE","clearTimeout","setInterval","INTERVAL_TIME","onContainerTouchEnd","firstTouchPosition","_projectSection","touches","screenX","screenY","identifier","touch","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","t","touchMoveVector","touchMoveAngle","abs","atan2","cancelable","project","contains","log","IntersectionObserver","observe"],"mappings":"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","file":"main.js","sourcesContent":["(function () {\r\n\t'use strict';\r\n\r\n\t//********************************************\r\n\t// CONSTANTS\r\n\t//********************************************\r\n\tconst CIRCLE_BACKGROUND_STROKE = '#eaeaea';\r\n\tconst CIRCLE_FOREGROUND_STROKE = '#2c2c2c';\r\n\tconst CIRCLE_STROKE_WIDTH = 15;\r\n\r\n\t//********************************************\r\n\t// SELECTORS\r\n\t//********************************************\r\n\tconst _circles = Array.from(document.querySelectorAll('#languages .lang canvas'));\r\n\r\n\t//********************************************\r\n\t// REGISTER EVENTS\r\n\t//********************************************\r\n\twindow.addEventListener('resize', onWindowResize);\r\n\r\n\t//********************************************\r\n\t// INITIALIZE\r\n\t//********************************************\r\n\tinit();\r\n\r\n\t///////////////////////////////////////////////////////////////////////\r\n\r\n\t//********************************************\r\n\t// FUNCTIONS\r\n\t//********************************************\r\n\tfunction init() {\r\n\t\t// Redraw window-size-dependent elements\r\n\t\tonWindowResize();\r\n\t}\r\n\r\n\tfunction drawCanvasCircles() {\r\n\t\t_circles.forEach((circle) => {\r\n\t\t\tlet ctx = circle.getContext('2d');\r\n\t\t\tlet size = parseInt(window.getComputedStyle(circle).width);\r\n\t\t\tlet value = parseInt(circle.dataset.value);\r\n\t\t\tlet pixelRatio = window.devicePixelRatio;\r\n\r\n\t\t\tctx.scale(pixelRatio, pixelRatio);\r\n\r\n\t\t\tcircle.width = size;\r\n\t\t\tcircle.height = size;\r\n\r\n\t\t\tctx.lineWidth = CIRCLE_STROKE_WIDTH;\r\n\r\n\t\t\tctx.beginPath();\r\n\t\t\tctx.strokeStyle = CIRCLE_BACKGROUND_STROKE;\r\n\t\t\tctx.arc(size / 2, size / 2, size / 2 - CIRCLE_STROKE_WIDTH, 0, 2 * Math.PI);\r\n\t\t\tctx.stroke();\r\n\r\n\t\t\tctx.beginPath();\r\n\t\t\tctx.strokeStyle = CIRCLE_FOREGROUND_STROKE;\r\n\t\t\tctx.arc(size / 2, size / 2, size / 2 - CIRCLE_STROKE_WIDTH, -Math.PI / 2, 2 * Math.PI / 100 * value - Math.PI / 2);\r\n\t\t\tctx.stroke();\r\n\t\t});\r\n\t}\r\n\r\n\t//********************************************\r\n\t// EVENT HANDLER\r\n\t//********************************************\r\n\tfunction onWindowResize() {\r\n\t\tdrawCanvasCircles();\r\n\t}\r\n}());","(function () {\r\n\t'use strict';\r\n\r\n\t//********************************************\r\n\t// CONSTANTS\r\n\t//********************************************\r\n\tconst INPUT_FILLED_CLASS = 'filled';\r\n\r\n\t//********************************************\r\n\t// SELECTORS\r\n\t//********************************************\r\n\tconst _inputs = Array.from(document.querySelectorAll('#contact input, #contact textarea'));\r\n\r\n\t//********************************************\r\n\t// INITIALIZE\r\n\t//********************************************\r\n\tinit();\r\n\r\n\t///////////////////////////////////////////////////////////////////////\r\n\r\n\t//********************************************\r\n\t// FUNCTIONS\r\n\t//********************************************\r\n\tfunction init() {\r\n\t\t_inputs.forEach((input) => {\r\n\t\t\tinput.addEventListener('keyup', () => {\r\n\t\t\t\tif(input.value){\r\n\t\t\t\t\treturn input.classList.add(INPUT_FILLED_CLASS);\r\n\t\t\t\t}\r\n\t\t\t\tel.classList.remove(INPUT_FILLED_CLASS);\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n}());","(function (win) {\r\n\t'use strict';\r\n\r\n\t//********************************************\r\n\t// CONSTANTS\r\n\t//********************************************\r\n\tconst COOKIE_ACCEPT_NAME = 'cookiesAccepted';\r\n\tconst INVERT_ME_CLASS = 'invertMe';\r\n\r\n\t//********************************************\r\n\t// SELECTORS\r\n\t//********************************************\r\n\tconst elCookieHint = document.querySelector('#cookies');\r\n\tconst elMap = document.querySelector('#map');\r\n\tconst elsSensible = document.querySelectorAll(`a.${INVERT_ME_CLASS}`);\r\n\r\n\t//********************************************\r\n\t// EXPORTS\r\n\t//********************************************\r\n\twin.initMap = initMap;\r\n\r\n\t//********************************************\r\n\t// INITIALIZATION\r\n\t//********************************************\r\n\tinit();\r\n\r\n\t///////////////////////////////////////////////////////////////////////\r\n\r\n\t//********************************************\r\n\t// FUNCTIONS\r\n\t//********************************************\r\n\tfunction init() {\r\n\t\t// Show console welcome message\r\n\t\tconsole.info('You like to look under the hood? Check out the source code on github 😎\\nhttps://github.com/schwarzdavid/schwarzdavid.rocks');\r\n\r\n\t\t// Show cookie hint\r\n\t\tif (!window.localStorage.getItem(COOKIE_ACCEPT_NAME)) {\r\n\t\t\telCookieHint.style.display = 'block';\r\n\t\t\telCookieHint.addEventListener('click', (e) => {\r\n\t\t\t\te.preventDefault();\r\n\t\t\t\twindow.localStorage.setItem(COOKIE_ACCEPT_NAME, true);\r\n\t\t\t\telCookieHint.style.display = 'none';\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t// Inverts content\r\n\t\tfor(let i = 0; i < elsSensible.length; i++){\r\n\t\t\tconst el = elsSensible[i];\r\n\t\t\tlet invertedText = el.textContent.split('').reverse().join('');\r\n\r\n\t\t\tel.textContent = invertedText;\r\n\t\t\tel.classList.remove(INVERT_ME_CLASS);\r\n\r\n\t\t\tif(el.nodeName === 'A'){\r\n\t\t\t\tlet prefix = el.href.split('#')[1];\r\n\t\t\t\tel.href = (prefix ? prefix + ':' : '') + invertedText;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction initMap() {\r\n\t\tlet markerPosition = {\r\n\t\t\tlat: 48.202765,\r\n\t\t\tlng: 16.303881\r\n\t\t};\r\n\r\n\t\tlet mapPosition = {\r\n\t\t\tlat: markerPosition.lat - 0.005,\r\n\t\t\tlng: markerPosition.lng\r\n\t\t};\r\n\r\n\t\tlet map = new google.maps.Map(elMap, {\r\n\t\t\tcenter: mapPosition,\r\n\t\t\tzoom: 11,\r\n\t\t\tclickableIcons: false,\r\n\t\t\tdisableDefaultUI: true,\r\n\t\t\tkeyboardShortcuts: false,\r\n\t\t\tzoomControl: false,\r\n\t\t\tscrollwheel: false,\r\n\t\t\tstyles: [{\r\n\t\t\t\t\"stylers\": [{\r\n\t\t\t\t\t\"hue\": \"#000000\"\r\n\t\t\t\t}, {\r\n\t\t\t\t\tsaturation: -110\r\n\t\t\t\t}, {\r\n\t\t\t\t\tgamma: 1.7\r\n\t\t\t\t}]\r\n\t\t\t}]\r\n\t\t});\r\n\r\n\t\tlet marker = new google.maps.Marker({\r\n\t\t\tposition: markerPosition,\r\n\t\t\tmap: map\r\n\t\t});\r\n\t}\r\n}(window));","(function () {\r\n\t'use strict';\r\n\r\n\t//********************************************\r\n\t// CONSTANTS\r\n\t//********************************************\r\n\tconst ALLOWED_PAGES = {\r\n\t\tNONE: '',\r\n\t\tTEASER: 'teaser',\r\n\t\tRESUME: 'resume'\r\n\t};\r\n\r\n\t//********************************************\r\n\t// SELECTORS\r\n\t//********************************************\r\n\tconst _menuSwitches = Array.from(document.querySelectorAll('[data-menu-switch]'));\r\n\tconst _pageAnchors = Array.from(document.querySelectorAll('[data-target]'));\r\n\tconst _projectSwitches = Array.from(document.querySelectorAll('[data-project]'));\r\n\tconst _resumeSwitches = Array.from(document.querySelectorAll('[data-resume-switch]'));\r\n\tconst _master = document.body;\r\n\r\n\t//********************************************\r\n\t// INITIALIZE\r\n\t//********************************************\r\n\tinit();\r\n\r\n\t///////////////////////////////////////////////////////////////////////\r\n\r\n\t//********************************************\r\n\t// FUNCTIONS\r\n\t//********************************************\r\n\tfunction init() {\r\n\t\t_menuSwitches.forEach((menuSwitch) => {\r\n\t\t\tmenuSwitch.addEventListener('click', (e) => {\r\n\t\t\t\te.preventDefault();\r\n\r\n\t\t\t\tif (_master.dataset.active === ALLOWED_PAGES.TEASER) {\r\n\t\t\t\t\treturn closeMenu();\r\n\t\t\t\t}\r\n\t\t\t\treturn openMenu();\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\t_resumeSwitches.forEach((resumeSwitch) => {\r\n\t\t\tresumeSwitch.addEventListener('click', (e) => {\r\n\t\t\t\te.preventDefault();\r\n\r\n\t\t\t\tif(_master.dataset.active === ALLOWED_PAGES.RESUME){\r\n\t\t\t\t\treturn closeResume();\r\n\t\t\t\t}\r\n\t\t\t\treturn openResume();\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\t_pageAnchors.forEach((pageAnchor) => {\r\n\r\n\t\t});\r\n\r\n\t\t_projectSwitches.forEach((projectSwitch) => {\r\n\r\n\t\t});\r\n\t}\r\n\r\n\tfunction closeMenu() {\r\n\t\t_master.dataset.active = ALLOWED_PAGES.NONE;\r\n\t}\r\n\r\n\tfunction openMenu() {\r\n\t\t_master.dataset.active = ALLOWED_PAGES.TEASER;\r\n\t}\r\n\r\n\tfunction closeResume() {\r\n\t\t_master.dataset.active = ALLOWED_PAGES.NONE;\r\n\t}\r\n\r\n\tfunction openResume() {\r\n\t\t_master.dataset.active = ALLOWED_PAGES.RESUME;\r\n\t}\r\n}());","(function () {\n\t'use strict';\n\n\t// TODO: learn proper english and then update comments\n\n\t//********************************************\n\t// CONSTANTS\n\t//********************************************\n\tconst INTERVAL_TIME = 5000;                     // Preview carousel interval\n\tconst MIN_DRAG_DISTANCE = 0.25;                 // Factor of preview width, that the user has to swipe\n\tconst PROJECT_ACTIVE_CLASS = 'active';          // Classname for currently visible project preview\n\tconst UNSET_ACTIVE_TIME = 150;                  // Duration how long the preview has to be pressed until the zoom effect will be disabled\n\n\t//********************************************\n\t// VARIABLES\n\t//********************************************\n\tlet activeProjectIndex = 0;                     // Determinates the currently visible preview\n\tlet bodyObserver;                               // Contains intersection observer to check, if projects are visible or not\n\tlet firstInteractionPosition;                   // Contains the position of the last interaction start position (mouse or touch)\n\tlet firstTouchPosition;                         // Contains the position of the last touch start position\n\tlet lastInteractionPosition;                    // Contains the position of the last interaction move position (mouse or touch)\n\tlet preventNextClick;                           // Next click-event should be aborted, because touchend event cannot prevent click event\n\tlet projectCarousel;                            // Contains the interval object of the preview carousel\n\tlet projectsVisible = true;                     // Contains information, if projects are visible or not\n\tlet unsetActiveTimeout;                         // Contains timeout which will be created when a interaction start begins. When finished, it will remove the active-class from all project previews\n\n\t//********************************************\n\t// SELECTORS\n\t//********************************************\n\tconst _projectPreviewContainer = document.querySelector('#projects .project-slider');\n\tconst _projectPreviews = Array.from(document.querySelectorAll('#projects .project'));\n\tconst _projectProgress = document.querySelector('#projects .project-wrapper progress');\n\tconst _projectSection = document.querySelector('#projects');\n\n\t//********************************************\n\t// REGISTER EVENTS\n\t//********************************************\n\t_projectPreviewContainer.addEventListener('touchstart', onContainerTouchStart);\n\t_projectPreviewContainer.addEventListener('touchmove', onContainerTouchMove);\n\t_projectPreviewContainer.addEventListener('touchend', onContainerTouchEnd);\n\t_projectPreviewContainer.addEventListener('touchcancel', onContainerTouchEnd);\n\t_projectPreviewContainer.addEventListener('mousedown', onContainerMouseDown);\n\t_projectPreviewContainer.addEventListener('mousemove', onContainerMouseMove);\n\t_projectPreviewContainer.addEventListener('mouseup', onContainerMouseUp);\n\n\t//********************************************\n\t// INITIALIZE\n\t//********************************************\n\tinit();\n\n\t///////////////////////////////////////////////////////////////////////\n\n\t//********************************************\n\t// FUNCTIONS\n\t//********************************************\n\t/**\n\t * Should be run once, when the page is loaded.\n\t * Dynamically binds click-event to all project previews, initializes the intersection observer and starts\n\t * the project carousel\n\t */\n\tfunction init() {\n\t\t// Bind events to projects\n\t\t_projectPreviews.forEach((project, index) => {\n\t\t\tproject.addEventListener('click', (e) => {\n\t\t\t\tif (preventNextClick) {\n\t\t\t\t\tpreventNextClick = false;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (project.classList.contains(PROJECT_ACTIVE_CLASS)) {\n\t\t\t\t\tconsole.log(\"open project\");\n\t\t\t\t} else {\n\t\t\t\t\tactiveProjectIndex = index;\n\t\t\t\t\tsetActiveProject(activeProjectIndex);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\tif ('IntersectionObserver' in window) {\n\t\t\tbodyObserver = new IntersectionObserver(observerCallback);\n\t\t\tbodyObserver.observe(_projectSection);\n\t\t}\n\n\t\tprojectCarousel = setInterval(nextProject, INTERVAL_TIME);\n\t}\n\n\t/**\n\t * Should be executed whenever the observer detects a change.\n\t * Determinates, if the project container is visible and saves the result to projectsVisible variable\n\t * @param entry\n\t */\n\tfunction observerCallback(entry) {\n\t\tif (entry.length > 1) {\n\t\t\tthrow new Error('too many entries on observer');\n\t\t}\n\t\tprojectsVisible = entry[0].isIntersecting;\n\t}\n\n\t/**\n\t * Sets focus to the project preview on given index\n\t * @param {int} [index=activeProjectIndex] - Index of project preview, which should be focused\n\t */\n\tfunction setActiveProject(index = activeProjectIndex) {\n\t\trequestAnimationFrame(() => {\n\t\t\t_projectPreviewContainer.classList.remove('notransition');\n\n\t\t\tfor (let sibling of _projectPreviews) {\n\t\t\t\tsibling.classList.remove(PROJECT_ACTIVE_CLASS);\n\t\t\t}\n\n\t\t\t_projectPreviewContainer.style.transform = `translateX(${index * -100}%)`;\n\t\t\t_projectPreviews[index].classList.add(PROJECT_ACTIVE_CLASS);\n\t\t\t_projectProgress.value = index + 1;\n\t\t});\n\t}\n\n\t/**\n\t * Makes a next step in the project carousel. When the end is reached, the index will be set to 0\n\t */\n\tfunction nextProject() {\n\t\tif (projectsVisible) {\n\t\t\tif (activeProjectIndex < _projectPreviews.length - 1) {\n\t\t\t\tactiveProjectIndex++;\n\t\t\t} else {\n\t\t\t\tactiveProjectIndex = 0;\n\t\t\t}\n\n\t\t\tsetActiveProject();\n\t\t}\n\t}\n\n\t/**\n\t * Prepares further move-interactions with projectpreviews.\n\t * Should be called whenever an interaction starts (touch or mouse)\n\t * @param {number} x - X-Position of interaction start\n\t * @param {number} y - Y-Position of interaction start\n\t */\n\tfunction containerInteractionStart(x, y) {\n\t\t// Save start position\n\t\tfirstInteractionPosition = {\n\t\t\tx: x,\n\t\t\ty: y\n\t\t};\n\n\t\t// Clear project rotation\n\t\tclearInterval(projectCarousel);\n\t\tprojectCarousel = null;\n\n\t\t// Pause animations when dragging project\n\t\trequestAnimationFrame(() => {\n\t\t\t_projectPreviewContainer.classList.add('notransition')\n\t\t});\n\n\t\t// Remove active class from project\n\t\tif (!unsetActiveTimeout) {\n\t\t\tunsetActiveTimeout = setTimeout(() => {\n\t\t\t\trequestAnimationFrame(() => {\n\t\t\t\t\tfor (let prev of _projectPreviews) {\n\t\t\t\t\t\tprev.classList.remove(PROJECT_ACTIVE_CLASS);\n\t\t\t\t\t}\n\t\t\t\t\tpreventNextClick = true;\n\t\t\t\t});\n\t\t\t}, UNSET_ACTIVE_TIME);\n\t\t}\n\t}\n\n\t/**\n\t * Calculates percentual move offset and moves project previews to calculated offset.\n\t * Should be called on every interaction move\n\t * @param {number} x - X-Position of interaction move\n\t * @param {number} y - Y-Position of interaction move\n\t */\n\tfunction containerInteractionMove(x, y) {\n\t\tif (!firstInteractionPosition) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet xDist = firstInteractionPosition.x - x;\n\t\tlet projectWidth = parseInt(window.getComputedStyle(_projectPreviewContainer).width);\n\t\tlet percentOffset = xDist / projectWidth;\n\t\tlet totalOffset = ((activeProjectIndex) + percentOffset) * -100;\n\n\t\trequestAnimationFrame(() => {\n\t\t\t_projectPreviewContainer.style.transform = `translateX(${totalOffset}%)`;\n\t\t});\n\n\t\tlastInteractionPosition = {\n\t\t\tx: x,\n\t\t\ty: y\n\t\t};\n\t}\n\n\t/**\n\t * Should be called whenever the interaction ends or the interaction should be aborted.\n\t * Resets all values and sets focus to new project index\n\t */\n\tfunction containerInteractionEnd() {\n\t\tif (firstInteractionPosition && lastInteractionPosition) {\n\t\t\tlet xDist = firstInteractionPosition.x - lastInteractionPosition.x;\n\t\t\tlet projectWidth = parseInt(window.getComputedStyle(_projectPreviewContainer).width);\n\t\t\tlet percentOffset = xDist / projectWidth;\n\n\t\t\tif (percentOffset < -MIN_DRAG_DISTANCE && activeProjectIndex > 0) {\n\t\t\t\tactiveProjectIndex--;\n\t\t\t}\n\n\t\t\tif (percentOffset > MIN_DRAG_DISTANCE && activeProjectIndex < _projectPreviews.length - 1) {\n\t\t\t\tactiveProjectIndex++;\n\t\t\t}\n\t\t}\n\n\t\tsetActiveProject(activeProjectIndex);\n\t\tclearTimeout(unsetActiveTimeout);\n\t\tfirstInteractionPosition = null;\n\t\tlastInteractionPosition = null;\n\t\tunsetActiveTimeout = null;\n\n\t\tprojectCarousel = setInterval(nextProject, INTERVAL_TIME);\n\t}\n\n\t//********************************************\n\t// EVENT HANDLER\n\t//********************************************\n\t/**\n\t * Gets called when a touch starts.\n\t * If started touch is the first one, starts project interaction\n\t * @param e Event\n\t */\n\tfunction onContainerTouchStart(e) {\n\t\tif (e.touches.length > 1) {\n\t\t\treturn;\n\t\t}\n\n\t\tfirstTouchPosition = {\n\t\t\tx: e.touches[0].screenX,\n\t\t\ty: e.touches[0].screenY,\n\t\t\tidentifier: e.touches[0].identifier\n\t\t};\n\n\t\tcontainerInteractionStart(firstTouchPosition.x, firstTouchPosition.y);\n\t}\n\n\t/**\n\t * Gets called when a touch move has been detected.\n\t * If the touch angle is less than +- 45deg, the interaction move function gets called.\n\t * @param e Event\n\t */\n\tfunction onContainerTouchMove(e) {\n\t\t// Return if no touch position was found\n\t\tif (!firstTouchPosition) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Identify touch\n\t\tlet touch;\n\t\tfor (let t of e.touches) {\n\t\t\tif (t.identifier === firstTouchPosition.identifier) {\n\t\t\t\ttouch = {\n\t\t\t\t\tx: t.screenX,\n\t\t\t\t\ty: t.screenY\n\t\t\t\t};\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (!touch) {\n\t\t\treturn onContainerTouchEnd();\n\t\t}\n\n\t\tlet touchMoveVector = {\n\t\t\tx: touch.x - firstTouchPosition.x,\n\t\t\ty: touch.y - firstTouchPosition.y\n\t\t};\n\n\t\tlet touchMoveAngle = Math.abs(Math.atan2(touchMoveVector.y, touchMoveVector.x));\n\n\t\tif ((touchMoveAngle < Math.PI / 4 || touchMoveAngle > Math.PI / 4 * 3) && e.cancelable) {\n\t\t\t// Prevents native page-foward/-back interactions\n\t\t\te.preventDefault();\n\n\t\t\tcontainerInteractionMove(touch.x, touch.y);\n\t\t} else {\n\t\t\tonContainerTouchEnd();\n\t\t}\n\t}\n\n\t/**\n\t * Gets called when a touch ends.\n\t * Resets all, by the touch used, variables and calls the interaction end function\n\t */\n\tfunction onContainerTouchEnd() {\n\t\tif (!firstTouchPosition) {\n\t\t\treturn;\n\t\t}\n\n\t\tfirstTouchPosition = null;\n\t\tcontainerInteractionEnd();\n\t}\n\n\t/**\n\t * Proxy function for interactionstart on mousedown\n\t * @param e\n\t */\n\tfunction onContainerMouseDown(e) {\n\t\tcontainerInteractionStart(e.screenX, e.screenY);\n\t}\n\n\t/**\n\t * Proxy function for interactionmove on mousemove\n\t * @param e\n\t */\n\tfunction onContainerMouseMove(e) {\n\t\tcontainerInteractionMove(e.screenX, e.screenY);\n\t}\n\n\t/**\n\t * Procy function for interactionend on mouseup\n\t */\n\tfunction onContainerMouseUp() {\n\t\tcontainerInteractionEnd();\n\t}\n}());\n"]}
{"version":3,"sources":["circles.js","contact.js","main.js","navigator.js","projects.js"],"names":["drawCanvasCircles","_circles","forEach","circle","ctx","getContext","size","parseInt","window","getComputedStyle","width","value","dataset","pixelRatio","devicePixelRatio","scale","height","lineWidth","CIRCLE_STROKE_WIDTH","beginPath","strokeStyle","CIRCLE_BACKGROUND_STROKE","arc","Math","PI","stroke","CIRCLE_FOREGROUND_STROKE","onWindowResize","Array","from","document","querySelectorAll","addEventListener","onSubmit","e","preventDefault","grecaptcha","getResponse","httpRequest","XMLHttpRequest","payload","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","_inputs","Symbol","iterator","next","done","input","name","err","return","open","FORM_URL","setRequestHeader","alert","activeInputs","INPUT_FILLED_CLASS","_form","removeEventListener","reset","requestAnimationFrame","_submitButton","classList","add","textContent","FINISHED_TEXT","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","remove","send","JSON","stringify","_textArea","querySelector","style","scrollHeight","win","COOKIE_ACCEPT_NAME","INVERT_ME_CLASS","elCookieHint","elMap","elsSensible","initMap","markerPosition","lat","lng","mapPosition","map","google","maps","Map","center","zoom","clickableIcons","disableDefaultUI","keyboardShortcuts","zoomControl","scrollwheel","styles","stylers","hue","saturation","gamma","Marker","position","console","info","localStorage","getItem","display","setItem","i","length","el","getPage","target","lowerTarget","toString","toLowerCase","result","p","ALLOWED_PAGES","openPage","page","_master","active","HOME","TEASER","RESUME","_links","_switches","body","_switch","targetOptions","switch","split","currOpen","Error","_link","link","openProject","index","ACTIVE_PROJECT_BODY_CLASS","_projectDetails","PROJECT_ACTIVE_CLASS","observerCallback","entry","projectsVisible","isIntersecting","setActiveProject","arguments","activeProjectIndex","_projectPreviewContainer","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","_projectPreviews","transform","_projectProgress","nextProject","containerInteractionStart","x","y","firstInteractionPosition","clearInterval","projectCarousel","clearTimeout","intervalTimeoutId","unsetActiveTimeout","setTimeout","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","preventNextClick","UNSET_ACTIVE_TIME","containerInteractionMove","xDist","projectWidth","totalOffset","lastInteractionPosition","containerInteractionEnd","percentOffset","MIN_DRAG_DISTANCE","setInterval","INTERVAL_TIME","INTERVAL_TIMEOUT","onContainerTouchEnd","firstTouchPosition","_projectSection","touches","screenX","screenY","identifier","touch","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","t","touchMoveVector","touchMoveAngle","abs","atan2","cancelable","project","contains","IntersectionObserver","observe"],"mappings":"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","file":"main.js","sourcesContent":["(function () {\r\n\t'use strict';\r\n\r\n\t//********************************************\r\n\t// CONSTANTS\r\n\t//********************************************\r\n\tconst CIRCLE_BACKGROUND_STROKE = '#eaeaea';\r\n\tconst CIRCLE_FOREGROUND_STROKE = '#2c2c2c';\r\n\tconst CIRCLE_STROKE_WIDTH = 15;\r\n\r\n\t//********************************************\r\n\t// SELECTORS\r\n\t//********************************************\r\n\tconst _circles = Array.from(document.querySelectorAll('#languages .lang canvas'));\r\n\r\n\t//********************************************\r\n\t// REGISTER EVENTS\r\n\t//********************************************\r\n\twindow.addEventListener('resize', onWindowResize);\r\n\r\n\t//********************************************\r\n\t// INITIALIZE\r\n\t//********************************************\r\n\tinit();\r\n\r\n\t///////////////////////////////////////////////////////////////////////\r\n\r\n\t//********************************************\r\n\t// FUNCTIONS\r\n\t//********************************************\r\n\tfunction init() {\r\n\t\t// Redraw window-size-dependent elements\r\n\t\tonWindowResize();\r\n\t}\r\n\r\n\tfunction drawCanvasCircles() {\r\n\t\t_circles.forEach((circle) => {\r\n\t\t\tlet ctx = circle.getContext('2d');\r\n\t\t\tlet size = parseInt(window.getComputedStyle(circle).width);\r\n\t\t\tlet value = parseInt(circle.dataset.value);\r\n\t\t\tlet pixelRatio = window.devicePixelRatio;\r\n\r\n\t\t\tctx.scale(pixelRatio, pixelRatio);\r\n\r\n\t\t\tcircle.width = size;\r\n\t\t\tcircle.height = size;\r\n\r\n\t\t\tctx.lineWidth = CIRCLE_STROKE_WIDTH;\r\n\r\n\t\t\tctx.beginPath();\r\n\t\t\tctx.strokeStyle = CIRCLE_BACKGROUND_STROKE;\r\n\t\t\tctx.arc(size / 2, size / 2, size / 2 - CIRCLE_STROKE_WIDTH, 0, 2 * Math.PI);\r\n\t\t\tctx.stroke();\r\n\r\n\t\t\tctx.beginPath();\r\n\t\t\tctx.strokeStyle = CIRCLE_FOREGROUND_STROKE;\r\n\t\t\tctx.arc(size / 2, size / 2, size / 2 - CIRCLE_STROKE_WIDTH, -Math.PI / 2, 2 * Math.PI / 100 * value - Math.PI / 2);\r\n\t\t\tctx.stroke();\r\n\t\t});\r\n\t}\r\n\r\n\t//********************************************\r\n\t// EVENT HANDLER\r\n\t//********************************************\r\n\tfunction onWindowResize() {\r\n\t\tdrawCanvasCircles();\r\n\t}\r\n}());","(function () {\r\n\t'use strict';\r\n\r\n\t//********************************************\r\n\t// CONSTANTS\r\n\t//********************************************\r\n\tconst INPUT_FILLED_CLASS = 'filled';\r\n\tconst FORM_URL = 'https://formspree.io/schwarz.david10@gmail.com';\r\n\tconst FINISHED_TEXT = 'SUCCESSFULLY SENT!';\r\n\r\n\t//********************************************\r\n\t// SELECTORS\r\n\t//********************************************\r\n\tconst _inputs = Array.from(document.querySelectorAll('#contact input, #contact textarea'));\r\n\tconst _textArea = document.querySelector('#input-message');\r\n\tconst _form = document.querySelector('#contact form');\r\n\tconst _submitButton = document.querySelector('#contact button');\r\n\r\n\t//********************************************\r\n\t// REGISTER EVENTS\r\n\t//********************************************\r\n\t_textArea.addEventListener('input', onInput);\r\n\t_form.addEventListener('submit', onSubmit);\r\n\r\n\t//********************************************\r\n\t// INITIALIZE\r\n\t//********************************************\r\n\tinit();\r\n\r\n\t///////////////////////////////////////////////////////////////////////\r\n\r\n\t//********************************************\r\n\t// FUNCTIONS\r\n\t//********************************************\r\n\tfunction init() {\r\n\t\t_inputs.forEach((input) => {\r\n\t\t\tinput.addEventListener('keyup', () => {\r\n\t\t\t\trequestAnimationFrame(() => {\r\n\t\t\t\t\tif (input.value) {\r\n\t\t\t\t\t\treturn input.classList.add(INPUT_FILLED_CLASS);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tinput.classList.remove(INPUT_FILLED_CLASS);\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t//********************************************\r\n\t// EVENT HANDLER\r\n\t//********************************************\r\n\tfunction onInput() {\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\t_textArea.style.height = 'auto';\r\n\t\t\t_textArea.style.height = `${_textArea.scrollHeight}px`;\r\n\t\t});\r\n\t}\r\n\r\n\tfunction onSubmit(e) {\r\n\t\te.preventDefault();\r\n\r\n\t\tif(!grecaptcha.getResponse()){\r\n\t\t\talert('Please complete recaptcha!');\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst httpRequest = new XMLHttpRequest();\r\n\t\tconst payload = {};\r\n\r\n\t\tfor(let input of _inputs){\r\n\t\t\tpayload[input.name] = input.value;\r\n\t\t}\r\n\r\n\t\thttpRequest.open('POST', FORM_URL);\r\n\t\thttpRequest.setRequestHeader('Accept', 'application/json');\r\n\t\thttpRequest.setRequestHeader('Content-Type', 'application/json');\r\n\r\n\t\thttpRequest.addEventListener('error', () => {\r\n\t\t\talert('Unexpected error occured. Please try again later!');\r\n\t\t});\r\n\r\n\t\thttpRequest.addEventListener('load', () => {\r\n\t\t\tconst activeInputs = Array.from(document.querySelectorAll(`.${INPUT_FILLED_CLASS}`));\r\n\r\n\t\t\t_form.removeEventListener('submit', onSubmit);\r\n\t\t\t_form.reset();\r\n\t\t\trequestAnimationFrame(() => {\r\n\t\t\t\t_submitButton.classList.add('finished');\r\n\t\t\t\t_submitButton.textContent = FINISHED_TEXT;\r\n\r\n\t\t\t\tfor(let input of activeInputs){\r\n\t\t\t\t\tinput.classList.remove(INPUT_FILLED_CLASS);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\thttpRequest.send(JSON.stringify(payload));\r\n\t}\r\n}());","(function (win) {\n\t'use strict';\n\n\t//********************************************\n\t// CONSTANTS\n\t//********************************************\n\tconst COOKIE_ACCEPT_NAME = 'cookiesAccepted';\n\tconst INVERT_ME_CLASS = 'invertMe';\n\n\t//********************************************\n\t// SELECTORS\n\t//********************************************\n\tconst elCookieHint = document.querySelector('#cookies');\n\tconst elMap = document.querySelector('#map');\n\tconst elsSensible = document.querySelectorAll(`a.${INVERT_ME_CLASS}`);\n\n\t//********************************************\n\t// EXPORTS\n\t//********************************************\n\twin.initMap = initMap;\n\n\t//********************************************\n\t// INITIALIZATION\n\t//********************************************\n\tinit();\n\n\t///////////////////////////////////////////////////////////////////////\n\n\t//********************************************\n\t// FUNCTIONS\n\t//********************************************\n\tfunction init() {\n\t\t// Show console welcome message\n\t\tconsole.info('You like to look under the hood? Check out the source code on github 😎\\nhttps://github.com/schwarzdavid/schwarzdavid.rocks');\n\n\t\t// Show cookie hint\n\t\tif (!window.localStorage.getItem(COOKIE_ACCEPT_NAME)) {\n\t\t\telCookieHint.style.display = 'block';\n\t\t\telCookieHint.addEventListener('click', (e) => {\n\t\t\t\te.preventDefault();\n\t\t\t\twindow.localStorage.setItem(COOKIE_ACCEPT_NAME, true);\n\t\t\t\telCookieHint.style.display = 'none';\n\t\t\t});\n\t\t}\n\n\t\t// Inverts content\n\t\tfor(let i = 0; i < elsSensible.length; i++){\n\t\t\tconst el = elsSensible[i];\n\t\t\tlet invertedText = el.textContent.split('').reverse().join('');\n\n\t\t\tel.textContent = invertedText;\n\t\t\tel.classList.remove(INVERT_ME_CLASS);\n\n\t\t\tif(el.nodeName === 'A'){\n\t\t\t\tlet prefix = el.href.split('#')[1];\n\t\t\t\tel.href = (prefix ? prefix + ':' : '') + invertedText;\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction initMap() {\n\t\tlet markerPosition = {\n\t\t\tlat: 48.202765,\n\t\t\tlng: 16.303881\n\t\t};\n\n\t\tlet mapPosition = {\n\t\t\tlat: markerPosition.lat - 0.005,\n\t\t\tlng: markerPosition.lng\n\t\t};\n\n\t\tlet map = new google.maps.Map(elMap, {\n\t\t\tcenter: mapPosition,\n\t\t\tzoom: 11,\n\t\t\tclickableIcons: false,\n\t\t\tdisableDefaultUI: true,\n\t\t\tkeyboardShortcuts: false,\n\t\t\tzoomControl: false,\n\t\t\tscrollwheel: false,\n\t\t\tstyles: [{\n\t\t\t\t\"stylers\": [{\n\t\t\t\t\t\"hue\": \"#000000\"\n\t\t\t\t}, {\n\t\t\t\t\tsaturation: -110\n\t\t\t\t}, {\n\t\t\t\t\tgamma: 1.7\n\t\t\t\t}]\n\t\t\t}]\n\t\t});\n\n\t\tlet marker = new google.maps.Marker({\n\t\t\tposition: markerPosition,\n\t\t\tmap: map\n\t\t});\n\t}\n}(window));","(function () {\r\n\t'use strict';\r\n\r\n\t//********************************************\r\n\t// CONSTANTS\r\n\t//********************************************\r\n\tconst ALLOWED_PAGES = {\r\n\t\tHOME: 'home',\r\n\t\tTEASER: 'teaser',\r\n\t\tRESUME: 'resume'\r\n\t};\r\n\r\n\t//********************************************\r\n\t// SELECTORS\r\n\t//********************************************\r\n\tconst _links = Array.from(document.querySelectorAll('[data-link]'));\r\n\tconst _switches = Array.from(document.querySelectorAll('[data-switch]'));\r\n\tconst _master = document.body;\r\n\r\n\t//********************************************\r\n\t// INITIALIZE\r\n\t//********************************************\r\n\tinit();\r\n\r\n\t///////////////////////////////////////////////////////////////////////\r\n\r\n\t//********************************************\r\n\t// FUNCTIONS\r\n\t//********************************************\r\n\tfunction init() {\r\n\t\t_switches.forEach((_switch) => {\r\n\t\t\t_switch.addEventListener('click', (e) => {\r\n\t\t\t\te.preventDefault();\r\n\r\n\t\t\t\tconst targetOptions = _switch.dataset.switch.split('-');\r\n\t\t\t\tconst currOpen = _master.dataset.active;\r\n\t\t\t\tlet target = targetOptions[0];\r\n\r\n\t\t\t\tif(currOpen === targetOptions[0].toString().toLowerCase()){\r\n\t\t\t\t\ttarget = targetOptions[1];\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst page = getPage(target);\r\n\t\t\t\tif(!page){\r\n\t\t\t\t\tthrow new Error(`Illegal page: ${target}`);\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn openPage(page);\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\t_links.forEach((_link) => {\r\n\t\t\t_link.addEventListener('click', (e) => {\r\n\t\t\t\te.preventDefault();\r\n\r\n\t\t\t\tconst target = _link.dataset.link;\r\n\t\t\t\tconst page = getPage(target);\r\n\t\t\t\tif(!page){\r\n\t\t\t\t\tthrow new Error(`Illegal page: ${target}`);\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn openPage(page);\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\tfunction getPage(target) {\r\n\t\tconst lowerTarget = target.toString().toLowerCase();\r\n\t\tlet result = '';\r\n\t\tfor(let p in ALLOWED_PAGES){\r\n\t\t\tif(ALLOWED_PAGES[p] === lowerTarget){\r\n\t\t\t\tresult = p;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\r\n\tfunction openPage(page) {\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\t_master.dataset.active = ALLOWED_PAGES[page];\r\n\t\t});\r\n\t}\r\n}());","(function () {\r\n\t'use strict';\r\n\r\n\t// TODO: learn proper english and update comments then\r\n\t// TODO: implement click-event on project previews\r\n\r\n\t//********************************************\r\n\t// CONSTANTS\r\n\t//********************************************\r\n\tconst INTERVAL_TIME = 5000;                     // Preview carousel interval\r\n\tconst MIN_DRAG_DISTANCE = 0.25;                 // Factor of preview width, that the user has to swipe\r\n\tconst PROJECT_ACTIVE_CLASS = 'active';          // Classname for currently visible project preview\r\n\tconst UNSET_ACTIVE_TIME = 150;                  // Duration how long the preview has to be pressed until the zoom effect will be disabled\r\n\tconst INTERVAL_TIMEOUT = 2000;                  // Time to wait after last interaction before carousel starts again\r\n\tconst ACTIVE_PROJECT_BODY_CLASS = 'details';\r\n\r\n\t//********************************************\r\n\t// VARIABLES\r\n\t//********************************************\r\n\tlet activeProjectIndex = 0;                     // Determinates the currently visible preview\r\n\tlet bodyObserver;                               // Contains intersection observer to check, if projects are visible or not\r\n\tlet firstInteractionPosition;                   // Contains the position of the last interaction start position (mouse or touch)\r\n\tlet firstTouchPosition;                         // Contains the position of the last touch start position\r\n\tlet lastInteractionPosition;                    // Contains the position of the last interaction move position (mouse or touch)\r\n\tlet preventNextClick;                           // Next click-event should be aborted, because touchend event cannot prevent click event\r\n\tlet projectCarousel;                            // Contains the interval object of the preview carousel\r\n\tlet projectsVisible = true;                     // Contains information, if projects are visible or not\r\n\tlet unsetActiveTimeout;                         // Contains timeout which will be created when a interaction start begins. When finished, it will remove the active-class from all project previews\r\n\tlet intervalTimeoutId;\r\n\r\n\t//********************************************\r\n\t// SELECTORS\r\n\t//********************************************\r\n\tconst _projectPreviewContainer = document.querySelector('#projects .project-slider');\r\n\tconst _projectPreviews = Array.from(document.querySelectorAll('#projects .project'));\r\n\tconst _projectProgress = document.querySelector('#projects .project-wrapper progress');\r\n\tconst _projectSection = document.querySelector('#projects');\r\n\tconst _projectDetails = Array.from(document.querySelectorAll('#details .project'));\r\n\r\n\t//********************************************\r\n\t// REGISTER EVENTS\r\n\t//********************************************\r\n\t_projectPreviewContainer.addEventListener('touchstart', onContainerTouchStart);\r\n\t_projectPreviewContainer.addEventListener('touchmove', onContainerTouchMove);\r\n\t_projectPreviewContainer.addEventListener('touchend', onContainerTouchEnd);\r\n\t_projectPreviewContainer.addEventListener('touchcancel', onContainerTouchEnd);\r\n\t_projectPreviewContainer.addEventListener('mousedown', onContainerMouseDown);\r\n\t_projectPreviewContainer.addEventListener('mousemove', onContainerMouseMove);\r\n\t_projectPreviewContainer.addEventListener('mouseup', onContainerMouseUp);\r\n\r\n\t//********************************************\r\n\t// INITIALIZE\r\n\t//********************************************\r\n\tinit();\r\n\r\n\t///////////////////////////////////////////////////////////////////////\r\n\r\n\t//********************************************\r\n\t// FUNCTIONS\r\n\t//********************************************\r\n\t/**\r\n\t * Should be run once, when the page is loaded.\r\n\t * Dynamically binds click-event to all project previews, initializes the intersection observer and starts\r\n\t * the project carousel\r\n\t */\r\n\tfunction init() {\r\n\t\t// Bind events to projects\r\n\t\t_projectPreviews.forEach((project, index) => {\r\n\t\t\tproject.addEventListener('click', (e) => {\r\n\t\t\t\tif (preventNextClick) {\r\n\t\t\t\t\tpreventNextClick = false;\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (project.classList.contains(PROJECT_ACTIVE_CLASS)) {\r\n\t\t\t\t\topenProject(index);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tactiveProjectIndex = index;\r\n\t\t\t\t\tsetActiveProject(activeProjectIndex);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\tif ('IntersectionObserver' in window) {\r\n\t\t\tbodyObserver = new IntersectionObserver(observerCallback);\r\n\t\t\tbodyObserver.observe(_projectSection);\r\n\t\t}\r\n\r\n\t\tprojectCarousel = setInterval(nextProject, INTERVAL_TIME);\r\n\t}\r\n\r\n\tfunction openProject(index){\r\n\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tdocument.body.dataset.active = ACTIVE_PROJECT_BODY_CLASS;\r\n\r\n\t\t\tfor(let i in _projectDetails){\r\n\t\t\t\tif(parseInt(i) === index){\r\n\t\t\t\t\t_projectDetails[i].classList.add(PROJECT_ACTIVE_CLASS);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t_projectDetails[i].classList.remove(PROJECT_ACTIVE_CLASS);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Should be executed whenever the observer detects a change.\r\n\t * Determinates, if the project container is visible and saves the result to projectsVisible variable\r\n\t * @param entry\r\n\t */\r\n\tfunction observerCallback(entry) {\r\n\t\tif (entry.length > 1) {\r\n\t\t\tthrow new Error('too many entries on observer');\r\n\t\t}\r\n\t\tprojectsVisible = entry[0].isIntersecting;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets focus to the project preview on given index\r\n\t * @param {int} [index=activeProjectIndex] - Index of project preview, which should be focused\r\n\t */\r\n\tfunction setActiveProject(index = activeProjectIndex) {\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\t_projectPreviewContainer.classList.remove('notransition');\r\n\r\n\t\t\tfor (let sibling of _projectPreviews) {\r\n\t\t\t\tsibling.classList.remove(PROJECT_ACTIVE_CLASS);\r\n\t\t\t}\r\n\r\n\t\t\t_projectPreviewContainer.style.transform = `translateX(${index * -100}%)`;\r\n\t\t\t_projectPreviews[index].classList.add(PROJECT_ACTIVE_CLASS);\r\n\t\t\t_projectProgress.value = index + 1;\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Makes a next step in the project carousel. When the end is reached, the index will be set to 0\r\n\t */\r\n\tfunction nextProject() {\r\n\t\tif (projectsVisible) {\r\n\t\t\tif (activeProjectIndex < _projectPreviews.length - 1) {\r\n\t\t\t\tactiveProjectIndex++;\r\n\t\t\t} else {\r\n\t\t\t\tactiveProjectIndex = 0;\r\n\t\t\t}\r\n\r\n\t\t\tsetActiveProject();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Prepares further move-interactions with projectpreviews.\r\n\t * Should be called whenever an interaction starts (touch or mouse)\r\n\t * @param {number} x - X-Position of interaction start\r\n\t * @param {number} y - Y-Position of interaction start\r\n\t */\r\n\tfunction containerInteractionStart(x, y) {\r\n\t\t// Save start position\r\n\t\tfirstInteractionPosition = {\r\n\t\t\tx: x,\r\n\t\t\ty: y\r\n\t\t};\r\n\r\n\t\t// Clear project rotation\r\n\t\tclearInterval(projectCarousel);\r\n\t\tclearTimeout(intervalTimeoutId);\r\n\t\tprojectCarousel = null;\r\n\t\tintervalTimeoutId = null;\r\n\r\n\t\t// Pause animations when dragging project\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\t_projectPreviewContainer.classList.add('notransition')\r\n\t\t});\r\n\r\n\t\t// Remove active class from project\r\n\t\tif (!unsetActiveTimeout) {\r\n\t\t\tunsetActiveTimeout = setTimeout(() => {\r\n\t\t\t\trequestAnimationFrame(() => {\r\n\t\t\t\t\tfor (let prev of _projectPreviews) {\r\n\t\t\t\t\t\tprev.classList.remove(PROJECT_ACTIVE_CLASS);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tpreventNextClick = true;\r\n\t\t\t\t});\r\n\t\t\t}, UNSET_ACTIVE_TIME);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Calculates percentual move offset and moves project previews to calculated offset.\r\n\t * Should be called on every interaction move\r\n\t * @param {number} x - X-Position of interaction move\r\n\t * @param {number} y - Y-Position of interaction move\r\n\t */\r\n\tfunction containerInteractionMove(x, y) {\r\n\t\tif (!firstInteractionPosition) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tlet xDist = firstInteractionPosition.x - x;\r\n\t\tlet projectWidth = parseInt(window.getComputedStyle(_projectPreviewContainer).width);\r\n\t\tlet percentOffset = xDist / projectWidth;\r\n\t\tlet totalOffset = ((activeProjectIndex) + percentOffset) * -100;\r\n\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\t_projectPreviewContainer.style.transform = `translateX(${totalOffset}%)`;\r\n\t\t});\r\n\r\n\t\tlastInteractionPosition = {\r\n\t\t\tx: x,\r\n\t\t\ty: y\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n\t * Should be called whenever the interaction ends or the interaction should be aborted.\r\n\t * Resets all values and sets focus to new project index\r\n\t */\r\n\tfunction containerInteractionEnd() {\r\n\t\tif (firstInteractionPosition && lastInteractionPosition) {\r\n\t\t\tlet xDist = firstInteractionPosition.x - lastInteractionPosition.x;\r\n\t\t\tlet projectWidth = parseInt(window.getComputedStyle(_projectPreviewContainer).width);\r\n\t\t\tlet percentOffset = xDist / projectWidth;\r\n\r\n\t\t\tif (percentOffset < -MIN_DRAG_DISTANCE && activeProjectIndex > 0) {\r\n\t\t\t\tactiveProjectIndex--;\r\n\t\t\t}\r\n\r\n\t\t\tif (percentOffset > MIN_DRAG_DISTANCE && activeProjectIndex < _projectPreviews.length - 1) {\r\n\t\t\t\tactiveProjectIndex++;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tsetActiveProject(activeProjectIndex);\r\n\t\tclearTimeout(unsetActiveTimeout);\r\n\t\tfirstInteractionPosition = null;\r\n\t\tlastInteractionPosition = null;\r\n\t\tunsetActiveTimeout = null;\r\n\r\n\t\tintervalTimeoutId = setTimeout(() => {\r\n\t\t\tprojectCarousel = setInterval(nextProject, INTERVAL_TIME);\r\n\t\t}, INTERVAL_TIMEOUT);\r\n\t}\r\n\r\n\t//********************************************\r\n\t// EVENT HANDLER\r\n\t//********************************************\r\n\t/**\r\n\t * Gets called when a touch starts.\r\n\t * If started touch is the first one, starts project interaction\r\n\t * @param e Event\r\n\t */\r\n\tfunction onContainerTouchStart(e) {\r\n\t\tif (e.touches.length > 1) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tfirstTouchPosition = {\r\n\t\t\tx: e.touches[0].screenX,\r\n\t\t\ty: e.touches[0].screenY,\r\n\t\t\tidentifier: e.touches[0].identifier\r\n\t\t};\r\n\r\n\t\tcontainerInteractionStart(firstTouchPosition.x, firstTouchPosition.y);\r\n\t}\r\n\r\n\t/**\r\n\t * Gets called when a touch move has been detected.\r\n\t * If the touch angle is less than +- 45deg, the interaction move function gets called.\r\n\t * @param e Event\r\n\t */\r\n\tfunction onContainerTouchMove(e) {\r\n\t\t// Return if no touch position was found\r\n\t\tif (!firstTouchPosition) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Identify touch\r\n\t\tlet touch;\r\n\t\tfor (let t of e.touches) {\r\n\t\t\tif (t.identifier === firstTouchPosition.identifier) {\r\n\t\t\t\ttouch = {\r\n\t\t\t\t\tx: t.screenX,\r\n\t\t\t\t\ty: t.screenY\r\n\t\t\t\t};\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!touch) {\r\n\t\t\treturn onContainerTouchEnd();\r\n\t\t}\r\n\r\n\t\tlet touchMoveVector = {\r\n\t\t\tx: touch.x - firstTouchPosition.x,\r\n\t\t\ty: touch.y - firstTouchPosition.y\r\n\t\t};\r\n\r\n\t\tlet touchMoveAngle = Math.abs(Math.atan2(touchMoveVector.y, touchMoveVector.x));\r\n\r\n\t\tif ((touchMoveAngle < Math.PI / 4 || touchMoveAngle > Math.PI / 4 * 3) && e.cancelable) {\r\n\t\t\t// Prevents native page-foward/-back interactions\r\n\t\t\te.preventDefault();\r\n\r\n\t\t\tcontainerInteractionMove(touch.x, touch.y);\r\n\t\t} else {\r\n\t\t\tonContainerTouchEnd();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Gets called when a touch ends.\r\n\t * Resets all, by the touch used, variables and calls the interaction end function\r\n\t */\r\n\tfunction onContainerTouchEnd() {\r\n\t\tif (!firstTouchPosition) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tfirstTouchPosition = null;\r\n\t\tcontainerInteractionEnd();\r\n\t}\r\n\r\n\t/**\r\n\t * Proxy function for interactionstart on mousedown\r\n\t * @param e\r\n\t */\r\n\tfunction onContainerMouseDown(e) {\r\n\t\tcontainerInteractionStart(e.screenX, e.screenY);\r\n\t}\r\n\r\n\t/**\r\n\t * Proxy function for interactionmove on mousemove\r\n\t * @param e\r\n\t */\r\n\tfunction onContainerMouseMove(e) {\r\n\t\tcontainerInteractionMove(e.screenX, e.screenY);\r\n\t}\r\n\r\n\t/**\r\n\t * Procy function for interactionend on mouseup\r\n\t */\r\n\tfunction onContainerMouseUp() {\r\n\t\tcontainerInteractionEnd();\r\n\t}\r\n}());\r\n"]}